name: Deploy Automatizado para Kubernetes

on:
  push:
    branches:
      - develop  # Deploy no ambiente de desenvolvimento
  pull_request:
    branches:
      - main  # Deploy no ambiente de produção

jobs:
  # Job para compilar o projeto
  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Baixar código do repositório
        uses: actions/checkout@v3

      - name: Download latest JDK 17
        run: |
          wget --no-verbose --directory-prefix $RUNNER_TEMP \
          https://download.oracle.com/java/17/archive/jdk-17.0.12_linux-x64_bin.tar.gz

      - name: Set up JDK from tar.gz
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: jdkfile
          jdkFile: ${{ runner.temp }}/jdk-17.0.12_linux-x64_bin.tar.gz

      - name: Compile
        run: mvn clean package

  # Job para verificar a existência do cluster EKS
  verify-cluster:
    needs: compile
    runs-on: ubuntu-latest
    steps:
      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Verificar ou criar cluster EKS
        run: |
          echo "Verificando se o cluster EKS existe..."
          if ! aws eks describe-cluster --name eks-cluster --region us-east-1; then
            echo "Cluster não encontrado."
          else
            echo "Cluster EKS já existe. Iremos prosseguir com o Deploy..."
          fi


  # Job para deploy no ambiente de desenvolvimento
  deploy-develop:
    needs: verify-cluster
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Baixar código do repositório
        uses: actions/checkout@v3

      - name: Instalar kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0'

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Atualizar configuração do Kubernetes
        run: |
          aws eks update-kubeconfig --name eks-cluster --region us-east-1

      - name: Deploy no ambiente de desenvolvimento
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/ingress.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/configMap.yaml
          kubectl apply -f kubernetes/dashboard.yaml
          kubectl apply -f kubernetes/hpa.yaml
          kubectl apply -f kubernetes/metrics.yaml
          kubectl apply -f kubernetes/secrets.yaml
          kubectl apply -f kubernetes/service_eks.yaml
          kubectl apply -f kubernetes/userAdmin.yaml

  # Job para deploy no ambiente de produção
  deploy-production:
    needs: verify-cluster
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
    steps:
      - name: Baixar código do repositório
        uses: actions/checkout@v3

      - name: Instalar kubectl
        uses: azure/setup-kubectl@v2.0
        with:
          version: 'v1.24.0'

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Atualizar configuração do Kubernetes
        run: |
          aws eks update-kubeconfig --name eks-cluster --region us-east-1

      - name: Deploy no ambiente de produção
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/ingress.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/configMap.yaml
          kubectl apply -f kubernetes/dashboard.yaml
          kubectl apply -f kubernetes/hpa.yaml
          kubectl apply -f kubernetes/metrics.yaml
          kubectl apply -f kubernetes/secrets.yaml
          kubectl apply -f kubernetes/service_eks.yaml
          kubectl apply -f kubernetes/userAdmin.yaml
